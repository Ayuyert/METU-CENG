# FURKAN KARACA 2521698
.pos 0x0
init:
    irmovq stack, %rsp
    irmovq array_begin1, %rdi
    irmovq array_end1, %rsi
    irmovq array_begin2, %rdx
    irmovq array_end2, %rcx
    irmovq array_begin3, %r8
    call merge
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

//rdi begin1
//rsi end1
//rdx begin2
//rcx end2
//r8 begin3

merge:
	rrmovq %rsi, %rax //rax = end1
	rrmovq %rcx, %rbx //rbx end2
	subq %rdi, %rax
	jg loopcheck
	subq %rdx, %rbx
	jg loop3
    ret

loopcheck:
	subq %rdx, %rbx
	jg loop1
	jmp loop2

loop1:
	mrmovq (%rdx), %r12
	mrmovq (%rdi), %rax
	subq %rax, %r12
	jg loop1if
	//j1 else part
	irmovq $8, %r9
	mrmovq (%rdx), %rax
	rmmovq %rax, (%r8)
	addq %r9, %r8
	addq %r9, %rdx
	jmp merge


//rdi begin1
//rsi end1
//rdx begin2
//rcx end2
//r8 begin3

loop1if:
	irmovq $8, %r9
	mrmovq (%rdi), %rax
	rmmovq %rax, (%r8)
	addq %r9, %r8
	addq %r9, %rdi
	jmp merge

loop2:
	irmovq $8, %r9
	mrmovq (%rdi), %rax
	rmmovq %rax, (%r8)
	addq %r9, %r8
	addq %r9, %rdi
	rrmovq %rsi, %rax
	subq %rdi, %rax
	jg loop2
	rrmovq %rcx, %rax
	subq %rdx, %rax
	jg loop3
	ret

loop3:
	irmovq $8, %r9
	mrmovq (%rdx), %rax
	rmmovq %rax, (%r8)
	addq %r9, %r8
	addq %r9, %rdx
	rrmovq %rcx, %rax
	subq %rdx, %rax
	jg loop3
	ret

#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin1:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 17
    .quad 18
    .quad 19
    .quad 110
array_end1:
    .quad 0
array_begin2:
    .quad 10
    .quad 11
    .quad 12
    .quad 200
    .quad 201
    .quad 202
    .quad 203
    .quad 204
array_end2:
    .quad 0
.pos 0x1500
array_begin3:
    .quad 0
.pos 0x1F00
stack:
    .quad 0


